[2018-09-03 17:54:08,585] {cli.py:374} INFO - Running on host MacBook-Pro-de-MANGANNEAU.local
[2018-09-03 17:54:08,602] {models.py:1197} INFO - Dependencies all met for <TaskInstance: workshop_airflow_exo_1.parse_json 2018-09-03 15:53:47.830877 [queued]>
[2018-09-03 17:54:08,606] {models.py:1197} INFO - Dependencies all met for <TaskInstance: workshop_airflow_exo_1.parse_json 2018-09-03 15:53:47.830877 [queued]>
[2018-09-03 17:54:08,606] {models.py:1407} INFO - 
--------------------------------------------------------------------------------
Starting attempt 1 of 1
--------------------------------------------------------------------------------

[2018-09-03 17:54:08,613] {models.py:1428} INFO - Executing <Task(PythonOperator): parse_json> on 2018-09-03 15:53:47.830877
[2018-09-03 17:54:08,614] {base_task_runner.py:115} INFO - Running: ['bash', '-c', 'airflow run workshop_airflow_exo_1 parse_json 2018-09-03T15:53:47.830877 --job_id 203 --raw -sd DAGS_FOLDER/exo1.py']
[2018-09-03 17:54:09,159] {base_task_runner.py:98} INFO - Subtask: [2018-09-03 17:54:09,159] {__init__.py:45} INFO - Using executor SequentialExecutor
[2018-09-03 17:54:09,199] {base_task_runner.py:98} INFO - Subtask: [2018-09-03 17:54:09,199] {models.py:189} INFO - Filling up the DagBag from /Users/magus/PycharmProjects/workshop_airflow/dags/exo1.py
[2018-09-03 17:54:09,268] {cli.py:374} INFO - Running on host MacBook-Pro-de-MANGANNEAU.local
[2018-09-03 17:54:09,280] {logging_mixin.py:84} INFO - type of response <class 'dict'>

[2018-09-03 17:54:09,283] {logging_mixin.py:84} INFO - itineraire Departure time : 2018-09-03 17:53:53

[2018-09-03 17:54:09,283] {logging_mixin.py:84} INFO - 

[2018-09-03 17:54:09,284] {logging_mixin.py:84} INFO - respsonse {'tickets': [], 'links': [{'href': 'https://api.navitia.io/v1/coverage/fr-idf/journeys?to=2.2950275;48.8737917&from=2.2728894;48.8812988&datetime_represents=departure&datetime=20180903T175453', 'type': 'next', 'rel': 'next', 'templated': False}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/journeys?to=2.2950275;48.8737917&from=2.2728894;48.8812988&datetime_represents=arrival&datetime=20180903T180035', 'type': 'prev', 'rel': 'prev', 'templated': False}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/journeys?to=2.2950275;48.8737917&from=2.2728894;48.8812988&datetime_represents=departure&datetime=20180903T000000', 'type': 'first', 'rel': 'first', 'templated': False}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/journeys?to=2.2950275;48.8737917&from=2.2728894;48.8812988&datetime_represents=arrival&datetime=20180903T235959', 'type': 'last', 'rel': 'last', 'templated': False}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/stop_points/{stop_point.id}', 'type': 'stop_point', 'rel': 'stop_points', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/commercial_modes/{commercial_modes.id}', 'type': 'commercial_modes', 'rel': 'commercial_modes', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/stop_areas/{stop_area.id}', 'type': 'stop_area', 'rel': 'stop_areas', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/vehicle_journeys/{vehicle_journey.id}', 'type': 'vehicle_journey', 'rel': 'vehicle_journeys', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/physical_modes/{physical_modes.id}', 'type': 'physical_modes', 'rel': 'physical_modes', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/routes/{route.id}', 'type': 'route', 'rel': 'routes', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/commercial_modes/{commercial_mode.id}', 'type': 'commercial_mode', 'rel': 'commercial_modes', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/addresses/{address.id}', 'type': 'address', 'rel': 'addresses', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/lines/{line.id}', 'type': 'line', 'rel': 'lines', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/physical_modes/{physical_mode.id}', 'type': 'physical_mode', 'rel': 'physical_modes', 'templated': True}, {'href': 'https://api.navitia.io/v1/coverage/fr-idf/networks/{network.id}', 'type': 'network', 'rel': 'networks', 'templated': True}], 'journeys': [{'status': '', 'distances': {'car': 0, 'walking': 116, 'bike': 0, 'ridesharing': 0}, 'links': [{'href': 'https://api.navitia.io/v1/coverage/fr-idf/journeys?allowed_id%5B%5D=stop_point%3AOIF%3ASP%3A59236&allowed_id%5B%5D=stop_point%3AOIF%3ASP%3A59250&from=2.2728894%3B48.8812988&to=2.2950275%3B48.8737917&is_journey_schedules=True&last_section_mode%5B%5D=walking&min_nb_journeys=5&min_nb_transfers=0&direct_path=none&first_section_mode%5B%5D=walking', 'type': 'journeys', 'rel': 'same_journey_schedules', 'templated': False}], 'tags': ['walking', 'ecologic'], 'nb_transfers': 0, 'durations': {'car': 0, 'walking': 104, 'total': 344, 'ridesharing': 0, 'bike': 0}, 'arrival_date_time': '20180903T180036', 'calendars': [{'active_periods': [{'begin': '20180903', 'end': '20180921'}], 'week_pattern': {'monday': True, 'tuesday': True, 'friday': False, 'wednesday': True, 'thursday': True, 'sunday': False, 'saturday': False}}], 'departure_date_time': '20180903T175452', 'requested_date_time': '20180903T175353', 'fare': {'found': False, 'total': {'value': '0.0'}, 'links': []}, 'co2_emission': {'value': 5.655, 'unit': 'gEC'}, 'type': 'best', 'duration': 344, 'sections': [{'from': {'embedded_type': 'address', 'id': '2.2728894;48.8812988', 'quality': 0, 'name': '58 Avenue Charles de Gaulle (Neuilly-sur-Seine)', 'address': {'name': 'Avenue Charles de Gaulle', 'house_number': 58, 'coord': {'lat': '48.8812988', 'lon': '2.2728894'}, 'label': '58 Avenue Charles de Gaulle (Neuilly-sur-Seine)', 'administrative_regions': [{'insee': '92051', 'name': 'Neuilly-sur-Seine', 'level': 8, 'coord': {'lat': '48.884683', 'lon': '2.269565'}, 'label': 'Neuilly-sur-Seine (92200)', 'id': 'admin:fr:92051', 'zip_code': '92200'}], 'id': '2.2728894;48.8812988'}}, 'links': [], 'arrival_date_time': '20180903T175600', 'departure_date_time': '20180903T175452', 'to': {'embedded_type': 'stop_point', 'stop_point': {'codes': [{'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22100:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22100'}, {'type': 'external_code', 'value': 'OIF59250'}, {'type': 'source', 'value': 'StopPoint:59250'}], 'name': "Les Sablons (Jardin d'Acclimatation)", 'links': [], 'physical_modes': [{'id': 'physical_mode:Metro', 'name': 'Métro'}], 'coord': {'lat': '48.881303', 'lon': '2.271933'}, 'label': "Les Sablons (Jardin d'Acclimatation) (Neuilly-sur-Seine)", 'equipments': [], 'commercial_modes': [{'id': 'commercial_mode:metro', 'name': 'Métro'}], 'administrative_regions': [{'insee': '92051', 'name': 'Neuilly-sur-Seine', 'level': 8, 'coord': {'lat': '48.884683', 'lon': '2.269565'}, 'label': 'Neuilly-sur-Seine (92200)', 'id': 'admin:fr:92051', 'zip_code': '92200'}], 'fare_zone': {'name': '2'}, 'id': 'stop_point:OIF:SP:59250', 'stop_area': {'codes': [{'type': 'external_code', 'value': 'OIF59250'}, {'type': 'source', 'value': 'StopArea:59250'}], 'name': 'Les Sablons', 'links': [], 'coord': {'lat': '48.881255', 'lon': '2.271856'}, 'label': 'Les Sablons (Neuilly-sur-Seine)', 'administrative_regions': [{'insee': '92051', 'name': 'Neuilly-sur-Seine', 'level': 8, 'coord': {'lat': '48.884683', 'lon': '2.269565'}, 'label': 'Neuilly-sur-Seine (92200)', 'id': 'admin:fr:92051', 'zip_code': '92200'}], 'timezone': 'Europe/Paris', 'id': 'stop_area:OIF:SA:59250'}}, 'quality': 0, 'name': "Les Sablons (Jardin d'Acclimatation) (Neuilly-sur-Seine)", 'id': 'stop_point:OIF:SP:59250'}, 'co2_emission': {'value': 0.0, 'unit': ''}, 'geojson': {'type': 'LineString', 'properties': [{'length': 76}], 'coordinates': [[2.2728262134, 48.8810980611], [2.2728262134, 48.8810980611], [2.272442, 48.881219], [2.272269, 48.881274], [2.27223, 48.881207], [2.2719559647, 48.8813477208], [2.271933, 48.881303]]}, 'duration': 68, 'path': [{'duration': 39, 'direction': 0, 'length': 44, 'name': 'Avenue Charles de Gaulle'}, {'duration': 7, 'direction': -95, 'length': 8, 'name': "Rue d'Orléans"}, {'duration': 22, 'direction': 0, 'length': 25, 'name': ''}], 'type': 'street_network', 'id': 'section_0_0_0', 'mode': 'walking'}, {'from': {'embedded_type': 'stop_point', 'stop_point': {'codes': [{'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22100:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22100'}, {'type': 'external_code', 'value': 'OIF59250'}, {'type': 'source', 'value': 'StopPoint:59250'}], 'name': "Les Sablons (Jardin d'Acclimatation)", 'links': [], 'coord': {'lat': '48.881303', 'lon': '2.271933'}, 'label': "Les Sablons (Jardin d'Acclimatation) (Neuilly-sur-Seine)", 'equipments': [], 'administrative_regions': [{'insee': '92051', 'name': 'Neuilly-sur-Seine', 'level': 8, 'coord': {'lat': '48.884683', 'lon': '2.269565'}, 'label': 'Neuilly-sur-Seine (92200)', 'id': 'admin:fr:92051', 'zip_code': '92200'}], 'fare_zone': {'name': '2'}, 'id': 'stop_point:OIF:SP:59250', 'stop_area': {'codes': [{'type': 'external_code', 'value': 'OIF59250'}, {'type': 'source', 'value': 'StopArea:59250'}], 'name': 'Les Sablons', 'links': [], 'coord': {'lat': '48.881255', 'lon': '2.271856'}, 'label': 'Les Sablons (Neuilly-sur-Seine)', 'timezone': 'Europe/Paris', 'id': 'stop_area:OIF:SA:59250'}}, 'quality': 0, 'name': "Les Sablons (Jardin d'Acclimatation) (Neuilly-sur-Seine)", 'id': 'stop_point:OIF:SP:59250'}, 'links': [{'type': 'vehicle_journey', 'id': 'vehicle_journey:OIF:93644255-1_33799-1'}, {'type': 'line', 'id': 'line:OIF:100110001:1OIF439'}, {'type': 'route', 'id': 'route:OIF:100110001:1_R'}, {'type': 'commercial_mode', 'id': 'commercial_mode:metro'}, {'type': 'physical_mode', 'id': 'physical_mode:Metro'}, {'type': 'network', 'id': 'network:OIF:439'}], 'arrival_date_time': '20180903T180000', 'additional_informations': ['regular'], 'departure_date_time': '20180903T175600', 'display_informations': {'direction': 'Château de Vincennes (Paris)', 'code': '1', 'network': 'METRO', 'links': [], 'color': 'FFCD00', 'name': 'Château de Vincennes - La Défense', 'physical_mode': 'Métro', 'headsign': 'OIF:93644255-1_33799-1', 'label': '1', 'equipments': [], 'text_color': '000000', 'commercial_mode': 'Métro', 'description': ''}, 'to': {'embedded_type': 'stop_point', 'stop_point': {'codes': [{'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22086:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22086'}, {'type': 'external_code', 'value': 'OIF59236'}, {'type': 'source', 'value': 'StopPoint:59236'}], 'name': 'Charles de Gaulle-Etoile', 'links': [], 'coord': {'lat': '48.873934', 'lon': '2.295146'}, 'label': 'Charles de Gaulle-Etoile (Paris)', 'equipments': [], 'administrative_regions': [{'insee': '75056', 'name': 'Paris', 'level': 8, 'coord': {'lat': '48.85661', 'lon': '2.351499'}, 'label': 'Paris (75000-75116)', 'id': 'admin:fr:75056', 'zip_code': '75000;75001;75002;75003;75004;75005;75006;75007;75008;75009;75010;75011;75012;75013;75014;75015;75016;75017;75018;75019;75020;75116'}, {'insee': '75117', 'name': 'Paris 17e Arrondissement', 'level': 9, 'coord': {'lat': '48.884223', 'lon': '2.322363'}, 'label': 'Paris 17e Arrondissement (75017)', 'id': 'admin:fr:75117', 'zip_code': '75017'}, {'insee': '7511765', 'name': 'Quartier des Ternes', 'level': 10, 'coord': {'lat': '48.88042', 'lon': '2.289984'}, 'label': 'Quartier des Ternes (75017)', 'id': 'admin:fr:7511765', 'zip_code': '75017'}], 'fare_zone': {'name': '1'}, 'id': 'stop_point:OIF:SP:59236', 'stop_area': {'codes': [{'type': 'external_code', 'value': 'OIF8775800'}, {'type': 'source', 'value': 'StopArea:8775800'}], 'name': 'Charles de Gaulle Etoile', 'links': [], 'coord': {'lat': '48.873981', 'lon': '2.295314'}, 'label': 'Charles de Gaulle Etoile (Paris)', 'timezone': 'Europe/Paris', 'id': 'stop_area:OIF:SA:8775800'}}, 'quality': 0, 'name': 'Charles de Gaulle-Etoile (Paris)', 'id': 'stop_point:OIF:SP:59236'}, 'base_arrival_date_time': '20180903T180000', 'base_departure_date_time': '20180903T175600', 'co2_emission': {'value': 5.655, 'unit': 'gEC'}, 'geojson': {'type': 'LineString', 'properties': [{'length': 1885}], 'coordinates': [[2.271933, 48.881303], [2.282484, 48.878009], [2.289462, 48.875676], [2.295146, 48.873934]]}, 'duration': 240, 'type': 'public_transport', 'id': 'section_1_0_0', 'data_freshness': 'base_schedule', 'stop_date_times': [{'stop_point': {'codes': [{'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22100:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22100'}, {'type': 'external_code', 'value': 'OIF59250'}, {'type': 'source', 'value': 'StopPoint:59250'}], 'name': "Les Sablons (Jardin d'Acclimatation)", 'links': [], 'coord': {'lat': '48.881303', 'lon': '2.271933'}, 'label': "Les Sablons (Jardin d'Acclimatation) (Neuilly-sur-Seine)", 'equipments': [], 'fare_zone': {'name': '2'}, 'id': 'stop_point:OIF:SP:59250'}, 'links': [], 'arrival_date_time': '20180903T175600', 'additional_informations': [], 'departure_date_time': '20180903T175600', 'base_arrival_date_time': '20180903T175600', 'base_departure_date_time': '20180903T175600'}, {'stop_point': {'codes': [{'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22078:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22078'}, {'type': 'external_code', 'value': 'OIF59229'}, {'type': 'source', 'value': 'StopPoint:59229'}], 'name': 'Porte Maillot', 'links': [], 'coord': {'lat': '48.878009', 'lon': '2.282484'}, 'label': 'Porte Maillot (Paris)', 'equipments': [], 'fare_zone': {'name': '1'}, 'id': 'stop_point:OIF:SP:59229'}, 'links': [], 'arrival_date_time': '20180903T175700', 'additional_informations': [], 'departure_date_time': '20180903T175700', 'base_arrival_date_time': '20180903T175700', 'base_departure_date_time': '20180903T175700'}, {'stop_point': {'codes': [{'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22088:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22088'}, {'type': 'external_code', 'value': 'OIF59237'}, {'type': 'source', 'value': 'StopPoint:59237'}], 'name': 'Argentine', 'links': [], 'coord': {'lat': '48.875676', 'lon': '2.289462'}, 'label': 'Argentine (Paris)', 'equipments': [], 'fare_zone': {'name': '1'}, 'id': 'stop_point:OIF:SP:59237'}, 'links': [], 'arrival_date_time': '20180903T175900', 'additional_informations': [], 'departure_date_time': '20180903T175900', 'base_arrival_date_time': '20180903T175900', 'base_departure_date_time': '20180903T175900'}, {'stop_point': {'codes': [{'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22086:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22086'}, {'type': 'external_code', 'value': 'OIF59236'}, {'type': 'source', 'value': 'StopPoint:59236'}], 'name': 'Charles de Gaulle-Etoile', 'links': [], 'coord': {'lat': '48.873934', 'lon': '2.295146'}, 'label': 'Charles de Gaulle-Etoile (Paris)', 'equipments': [], 'fare_zone': {'name': '1'}, 'id': 'stop_point:OIF:SP:59236'}, 'links': [], 'arrival_date_time': '20180903T180000', 'additional_informations': [], 'departure_date_time': '20180903T180000', 'base_arrival_date_time': '20180903T180000', 'base_departure_date_time': '20180903T180000'}]}, {'from': {'embedded_type': 'stop_point', 'stop_point': {'codes': [{'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22086:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22086'}, {'type': 'external_code', 'value': 'OIF59236'}, {'type': 'source', 'value': 'StopPoint:59236'}, {'type': 'SIRI_STIF', 'value': 'STIF:StopPoint:Q:22086:'}, {'type': 'ZDEr_ID_REF_A', 'value': '22086'}, {'type': 'external_code', 'value': 'OIF59236'}, {'type': 'source', 'value': 'StopPoint:59236'}], 'name': 'Charles de Gaulle-Etoile', 'links': [], 'physical_modes': [{'id': 'physical_mode:Metro', 'name': 'Métro'}], 'coord': {'lat': '48.873934', 'lon': '2.295146'}, 'label': 'Charles de Gaulle-Etoile (Paris)', 'equipments': [], 'commercial_modes': [{'id': 'commercial_mode:metro', 'name': 'Métro'}], 'administrative_regions': [{'insee': '75056', 'name': 'Paris', 'level': 8, 'coord': {'lat': '48.85661', 'lon': '2.351499'}, 'label': 'Paris (75000-75116)', 'id': 'admin:fr:75056', 'zip_code': '75000;75001;75002;75003;75004;75005;75006;75007;75008;75009;75010;75011;75012;75013;75014;75015;75016;75017;75018;75019;75020;75116'}, {'insee': '75117', 'name': 'Paris 17e Arrondissement', 'level': 9, 'coord': {'lat': '48.884223', 'lon': '2.322363'}, 'label': 'Paris 17e Arrondissement (75017)', 'id': 'admin:fr:75117', 'zip_code': '75017'}, {'insee': '7511765', 'name': 'Quartier des Ternes', 'level': 10, 'coord': {'lat': '48.88042', 'lon': '2.289984'}, 'label': 'Quartier des Ternes (75017)', 'id': 'admin:fr:7511765', 'zip_code': '75017'}, {'insee': '75056', 'name': 'Paris', 'level': 8, 'coord': {'lat': '48.85661', 'lon': '2.351499'}, 'label': 'Paris (75000-75116)', 'id': 'admin:fr:75056', 'zip_code': '75000;75001;75002;75003;75004;75005;75006;75007;75008;75009;75010;75011;75012;75013;75014;75015;75016;75017;75018;75019;75020;75116'}, {'insee': '75117', 'name': 'Paris 17e Arrondissement', 'level': 9, 'coord': {'lat': '48.884223', 'lon': '2.322363'}, 'label': 'Paris 17e Arrondissement (75017)', 'id': 'admin:fr:75117', 'zip_code': '75017'}, {'insee': '7511765', 'name': 'Quartier des Ternes', 'level': 10, 'coord': {'lat': '48.88042', 'lon': '2.289984'}, 'label': 'Quartier des Ternes (75017)', 'id': 'admin:fr:7511765', 'zip_code': '75017'}], 'fare_zone': {'name': '1'}, 'id': 'stop_point:OIF:SP:59236', 'stop_area': {'codes': [{'type': 'external_code', 'value': 'OIF8775800'}, {'type': 'source', 'value': 'StopArea:8775800'}, {'type': 'external_code', 'value': 'OIF8775800'}, {'type': 'source', 'value': 'StopArea:8775800'}], 'name': 'Charles de Gaulle Etoile', 'links': [], 'coord': {'lat': '48.873981', 'lon': '2.295314'}, 'label': 'Charles de Gaulle Etoile (Paris)', 'administrative_regions': [{'insee': '75056', 'name': 'Paris', 'level': 8, 'coord': {'lat': '48.85661', 'lon': '2.351499'}, 'label': 'Paris (75000-75116)', 'id': 'admin:fr:75056', 'zip_code': '75000;75001;75002;75003;75004;75005;75006;75007;75008;75009;75010;75011;75012;75013;75014;75015;75016;75017;75018;75019;75020;75116'}, {'insee': '75117', 'name': 'Paris 17e Arrondissement', 'level': 9, 'coord': {'lat': '48.884223', 'lon': '2.322363'}, 'label': 'Paris 17e Arrondissement (75017)', 'id': 'admin:fr:75117', 'zip_code': '75017'}, {'insee': '7511765', 'name': 'Quartier des Ternes', 'level': 10, 'coord': {'lat': '48.88042', 'lon': '2.289984'}, 'label': 'Quartier des Ternes (75017)', 'id': 'admin:fr:7511765', 'zip_code': '75017'}, {'insee': '75116', 'name': 'Paris 16e Arrondissement', 'level': 9, 'coord': {'lat': '48.86317', 'lon': '2.275764'}, 'label': 'Paris 16e Arrondissement (75016-75116)', 'id': 'admin:fr:75116', 'zip_code': '75016;75116'}, {'insee': '7511664', 'name': 'Quartier de Chaillot', 'level': 10, 'coord': {'lat': '48.868433', 'lon': '2.291677'}, 'label': 'Quartier de Chaillot (75016-75116)', 'id': 'admin:fr:7511664', 'zip_code': '75016;75116'}, {'insee': '75108', 'name': 'Paris 8e Arrondissement', 'level': 9, 'coord': {'lat': '48.877315', 'lon': '2.317261'}, 'label': 'Paris 8e Arrondissement (75008)', 'id': 'admin:fr:75108', 'zip_code': '75008'}, {'insee': '7510830', 'name': 'Quartier du Faubourg-du-Roule', 'level': 10, 'coord': {'lat': '48.874137', 'lon': '2.304122'}, 'label': 'Quartier du Faubourg-du-Roule (75008)', 'id': 'admin:fr:7510830', 'zip_code': '75008'}, {'insee': '7510829', 'name': 'Quartier des Champs-Élysées', 'level': 10, 'coord': {'lat': '48.867076', 'lon': '2.30865'}, 'label': 'Quartier des Champs-Élysées (75008)', 'id': 'admin:fr:7510829', 'zip_code': '75008'}], 'timezone': 'Europe/Paris', 'id': 'stop_area:OIF:SA:8775800'}}, 'quality': 0, 'name': 'Charles de Gaulle-Etoile (Paris)', 'id': 'stop_point:OIF:SP:59236'}, 'links': [], 'arrival_date_time': '20180903T180036', 'departure_date_time': '20180903T180000', 'to': {'embedded_type': 'address', 'id': '2.2950275;48.8737917', 'quality': 0, 'name': 'Passage du Souvenir (Paris)', 'address': {'name': 'Passage du Souvenir', 'house_number': 0, 'coord': {'lat': '48.8737917', 'lon': '2.2950275'}, 'label': 'Passage du Souvenir (Paris)', 'administrative_regions': [{'insee': '75056', 'name': 'Paris', 'level': 8, 'coord': {'lat': '48.85661', 'lon': '2.351499'}, 'label': 'Paris (75000-75116)', 'id': 'admin:fr:75056', 'zip_code': '75000;75001;75002;75003;75004;75005;75006;75007;75008;75009;75010;75011;75012;75013;75014;75015;75016;75017;75018;75019;75020;75116'}], 'id': '2.2950275;48.8737917'}}, 'co2_emission': {'value': 0.0, 'unit': ''}, 'geojson': {'type': 'LineString', 'properties': [{'length': 40}], 'coordinates': [[2.295146, 48.873934], [2.295146, 48.874024], [2.2951046735, 48.8740370016], [2.2951046735, 48.8740370016]]}, 'duration': 36, 'path': [{'duration': 36, 'direction': 0, 'length': 40, 'name': ''}], 'type': 'street_network', 'id': 'section_2_0_0', 'mode': 'walking'}]}, {'status': '', 'distances': {'car': 0, 'walking': 2201, 'bike': 0, 'ridesharing': 0}, 'tags': ['walking', 'non_pt', 'non_pt_walking', 'ecologic'], 'nb_transfers': 0, 'durations': {'car': 0, 'walking': 1966, 'total': 1966, 'ridesharing': 0, 'bike': 0}, 'arrival_date_time': '20180903T182639', 'departure_date_time': '20180903T175353', 'requested_date_time': '20180903T175353', 'fare': {'found': False, 'links': []}, 'co2_emission': {'value': 0.0, 'unit': ''}, 'type': 'non_pt_walk', 'duration': 1966, 'sections': [{'from': {'embedded_type': 'address', 'id': '2.2728894;48.8812988', 'quality': 0, 'name': '58 Avenue Charles de Gaulle (Neuilly-sur-Seine)', 'address': {'name': 'Avenue Charles de Gaulle', 'house_number': 58, 'coord': {'lat': '48.8812988', 'lon': '2.2728894'}, 'label': '58 Avenue Charles de Gaulle (Neuilly-sur-Seine)', 'administrative_regions': [{'insee': '92051', 'name': 'Neuilly-sur-Seine', 'level': 8, 'coord': {'lat': '48.884683', 'lon': '2.269565'}, 'label': 'Neuilly-sur-Seine (92200)', 'id': 'admin:fr:92051', 'zip_code': '92200'}], 'id': '2.2728894;48.8812988'}}, 'links': [], 'arrival_date_time': '20180903T182639', 'departure_date_time': '20180903T175353', 'to': {'embedded_type': 'address', 'id': '2.2950275;48.8737917', 'quality': 0, 'name': 'Passage du Souvenir (Paris)', 'address': {'name': 'Passage du Souvenir', 'house_number': 0, 'coord': {'lat': '48.8737917', 'lon': '2.2950275'}, 'label': 'Passage du Souvenir (Paris)', 'administrative_regions': [{'insee': '75056', 'name': 'Paris', 'level': 8, 'coord': {'lat': '48.85661', 'lon': '2.351499'}, 'label': 'Paris (75000-75116)', 'id': 'admin:fr:75056', 'zip_code': '75000;75001;75002;75003;75004;75005;75006;75007;75008;75009;75010;75011;75012;75013;75014;75015;75016;75017;75018;75019;75020;75116'}], 'id': '2.2950275;48.8737917'}}, 'co2_emission': {'value': 0.0, 'unit': ''}, 'geojson': {'type': 'LineString', 'properties': [{'length': 2201}], 'coordinates': [[2.2728262134, 48.8810980611], [2.273268, 48.880959], [2.273595, 48.880855], [2.274334, 48.880627], [2.27491, 48.88044], [2.275804, 48.880165], [2.276225, 48.880025], [2.276314, 48.879997], [2.27716, 48.87973], [2.278457, 48.87932], [2.278638, 48.879222], [2.279504, 48.878941], [2.279759, 48.878858], [2.279897, 48.878757], [2.280019, 48.878668], [2.281546, 48.878406], [2.282163, 48.878593], [2.28238, 48.878617], [2.28342, 48.878283], [2.283692, 48.878141], [2.283896, 48.877766], [2.283909, 48.877498], [2.284047, 48.877384], [2.284169, 48.877316], [2.284509, 48.877194], [2.285301, 48.876946], [2.285387, 48.876919], [2.285724, 48.876811], [2.287252, 48.87632], [2.289026, 48.875766], [2.289453, 48.875633], [2.290453, 48.875317], [2.290966, 48.875153], [2.291222, 48.875075], [2.291278, 48.875056], [2.291436, 48.875005], [2.293039, 48.874495], [2.294243, 48.874102], [2.294518, 48.874288], [2.294935, 48.874386], [2.295437, 48.874328], [2.295817, 48.874106], [2.29596, 48.873826], [2.295911, 48.873573], [2.296545, 48.87337], [2.296645, 48.873509], [2.29643, 48.873539], [2.296338, 48.873567], [2.295401, 48.873985], [2.29506, 48.874084], [2.295057, 48.874052], [2.2951046735, 48.8740370016]]}, 'duration': 1966, 'path': [{'duration': 513, 'direction': 0, 'length': 575, 'name': 'Avenue Charles de Gaulle'}, {'duration': 120, 'direction': 0, 'length': 134, 'name': 'Avenue de Neuilly'}, {'duration': 223, 'direction': -39, 'length': 250, 'name': 'Place de la Porte Maillot'}, {'duration': 750, 'direction': -37, 'length': 840, 'name': 'Avenue de la Grande Armée'}, {'duration': 174, 'direction': -72, 'length': 195, 'name': 'Place Charles de Gaulle'}, {'duration': 46, 'direction': -71, 'length': 52, 'name': 'Avenue des Champs-Élysées'}, {'duration': 15, 'direction': -91, 'length': 17, 'name': ''}, {'duration': 14, 'direction': -103, 'length': 16, 'name': 'Promenade des Champs-Élysées'}, {'duration': 6, 'direction': 13, 'length': 7, 'name': ''}, {'duration': 98, 'direction': 9, 'length': 110, 'name': 'Passage du Souvenir'}, {'duration': 4, 'direction': -110, 'length': 4, 'name': ''}, {'duration': 3, 'direction': 0, 'length': 3, 'name': ''}], 'type': 'street_network', 'id': 'section_3_0_1', 'mode': 'walking'}]}], 'disruptions': [], 'notes': [], 'feed_publishers': [{'url': 'https://www.openstreetmap.org/copyright', 'id': 'osm', 'license': 'ODbL', 'name': 'openstreetmap'}, {'url': 'http://www.vianavigo.com', 'id': 'OIF', 'license': 'ODbL', 'name': 'Île de France Mobilités'}], 'context': {'timezone': 'Europe/Paris', 'current_datetime': '20180903T175353', 'car_direct_path': {'co2_emission': {'value': 452.5848425579, 'unit': 'gEC'}}}, 'exceptions': []}

[2018-09-03 17:54:09,284] {logging_mixin.py:84} INFO - i 0

[2018-09-03 17:54:09,284] {logging_mixin.py:84} INFO - j 0

[2018-09-03 17:54:09,284] {logging_mixin.py:84} INFO - section_id 0

[2018-09-03 17:54:09,284] {logging_mixin.py:84} INFO - type of section <class 'dict'>

[2018-09-03 17:54:09,284] {models.py:1595} ERROR - must be str, not NoneType
Traceback (most recent call last):
  File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/lib/python3.6/site-packages/airflow/models.py", line 1493, in _run_raw_task
    result = task_copy.execute(context=context)
  File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 89, in execute
    return_value = self.execute_callable()
  File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 94, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/Users/magus/PycharmProjects/workshop_airflow/utils/parsing.py", line 50, in parse_journey
    itinerary = itinerary + get_section(response_json, i, j)
TypeError: must be str, not NoneType
[2018-09-03 17:54:09,287] {models.py:1624} INFO - Marking task as FAILED.
[2018-09-03 17:54:09,294] {models.py:1644} ERROR - must be str, not NoneType
[2018-09-03 17:54:09,297] {base_task_runner.py:98} INFO - Subtask: Traceback (most recent call last):
[2018-09-03 17:54:09,298] {base_task_runner.py:98} INFO - Subtask:   File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/bin/airflow", line 27, in <module>
[2018-09-03 17:54:09,298] {base_task_runner.py:98} INFO - Subtask:     args.func(args)
[2018-09-03 17:54:09,298] {base_task_runner.py:98} INFO - Subtask:   File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/lib/python3.6/site-packages/airflow/bin/cli.py", line 392, in run
[2018-09-03 17:54:09,298] {base_task_runner.py:98} INFO - Subtask:     pool=args.pool,
[2018-09-03 17:54:09,298] {base_task_runner.py:98} INFO - Subtask:   File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/lib/python3.6/site-packages/airflow/utils/db.py", line 50, in wrapper
[2018-09-03 17:54:09,298] {base_task_runner.py:98} INFO - Subtask:     result = func(*args, **kwargs)
[2018-09-03 17:54:09,298] {base_task_runner.py:98} INFO - Subtask:   File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/lib/python3.6/site-packages/airflow/models.py", line 1493, in _run_raw_task
[2018-09-03 17:54:09,306] {base_task_runner.py:98} INFO - Subtask:     result = task_copy.execute(context=context)
[2018-09-03 17:54:09,306] {base_task_runner.py:98} INFO - Subtask:   File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 89, in execute
[2018-09-03 17:54:09,307] {base_task_runner.py:98} INFO - Subtask:     return_value = self.execute_callable()
[2018-09-03 17:54:09,307] {base_task_runner.py:98} INFO - Subtask:   File "/Users/magus/PycharmProjects/workshop_airflow/workshop_env/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 94, in execute_callable
[2018-09-03 17:54:09,307] {base_task_runner.py:98} INFO - Subtask:     return self.python_callable(*self.op_args, **self.op_kwargs)
[2018-09-03 17:54:09,307] {base_task_runner.py:98} INFO - Subtask:   File "/Users/magus/PycharmProjects/workshop_airflow/utils/parsing.py", line 50, in parse_journey
[2018-09-03 17:54:09,307] {base_task_runner.py:98} INFO - Subtask:     itinerary = itinerary + get_section(response_json, i, j)
[2018-09-03 17:54:09,307] {base_task_runner.py:98} INFO - Subtask: TypeError: must be str, not NoneType
